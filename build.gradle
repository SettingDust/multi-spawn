buildscript {
    repositories {
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.30-M1")
        classpath("com.github.jengelman.gradle.plugins:shadow:6.0.0")
        classpath("org.jmailen.gradle:kotlinter-gradle:3.0.2")
    }
}

applyPlugin("org.jetbrains.kotlin.jvm")
applyPlugin("org.jetbrains.kotlin.kapt")
applyPlugin("com.github.johnrengelman.shadow")
applyPlugin("org.jmailen.kotlinter")
//applyPlugin("net.kyori.blossom")

def applyPlugin(id) {
    if (project.plugins.findPlugin(id) != null) {
        println("$id already applied")
    } else {
        apply plugin: id
    }
}

def major = 3
def minor = 1
def patch = 0

def mainVersion = [major, minor, patch].join(".")

group = "me.settingdust"
version = mainVersion

if (System.getenv("BUILD_NUMBER") != null)
    version += ".b${System.getenv("BUILD_NUMBER").toString()}"
//if (System.getenv("GITHUB_REF") == null || System.getenv("GITHUB_REF").endsWith("-dev"))
//    version += "-dev"

repositories {
    mavenCentral()
    maven { // Sponge
        url "https://repo.spongepowered.org/maven/"
    }
    maven { // bStats
        url "https://repo.codemc.org/repository/maven-public"
    }
    maven { // Nucleus
        url "http://repo.drnaylor.co.uk/artifactory/list/minecraft"
    }
}

dependencies {
    def kotlin = "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation kotlin
    shadow kotlin

    def spongeApi = "org.spongepowered:spongeapi:7.3.0"
    implementation spongeApi
    kapt spongeApi

    def bstats = "org.bstats:bstats-sponge:1.7"
    implementation bstats
    shadow bstats
    kapt bstats

    implementation "io.github.nucleuspowered:nucleus-api:2.0.0-SNAPSHOT-S7.1"

    def lavenSponge = project("laven-sponge")
    api lavenSponge
    shadow(lavenSponge) {
        exclude group: "org.spongepowered", module: "spongeapi"
        exclude group: "org.jetbrains.kotlin"
    }

    api project("laven-sponge:laven")
}

//blossom {
//    replaceToken "@version@", mainVersion
//}

kotlinter {
    ignoreFailures = true
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
jar {
    actions = []
    finalizedBy shadowJar
}
shadowJar {
    archiveClassifier.set("")
    configurations = [project.configurations.shadow]
    exclude "META-INF/**", "org/intellij/lang/annotations/**", "org/jetbrains/annotations/**"

    relocate "ninja.leaping.configurate.kotlin", "${project.getGroup()}.runtime.configurate.kotlin"
    relocate "kotlin", "${project.getGroup()}.runtime.kotlin"
    relocate "org.bstats", "${project.getGroup()}.runtime.bstats"
}
build { dependsOn("formatKotlinMain") }